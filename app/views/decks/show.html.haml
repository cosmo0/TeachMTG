- provide(:title, @deck.title + " - Teach Magic: The Gathering")

%h1= @deck.title

.row-fluid
  .span5
    .decklist.row-fluid
      - @types.each do |t|
        - if @deck.cards.joins(:card_type).where(card_types: { name: t.name }).any? # do not display card type if there aren't any card of this type
          .type
            %h3= t.name.pluralize
            - @deck.cards.joins(:card_type).where(card_types: { name: t.name }).order(:name).each do |c| # get all cards of this type for this deck
              .card
                = "#{c.quantity}x"
                = link_to c.name.titleize, c.magiccards_url, { target: "_blank", data: { name: c.name } }
                - if !c.cost.nil? && !c.cost.empty?
                  %span.cost= c.cost

    - if user_is_admin
      = link_to "Edit this deck", edit_deck_path(@deck), class: "btn btn-warning"

  .span7
    %img.pull-right.thumbnail{ src: "/assets/images/#{@deck.slug}.jpg" }
    .description
      = markdown @deck.description

%hr

.row-fluid
  #disqus_thread
  %a{ href: "http://disqus.com", class: "dsq-brlink" }
    comments powered by
    %span.logo-disqus Disqus
